<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.earth.danggeun.dao.DanggeunMapper">

	<!-- 옵션을 이용해 불러온 상품 개수구할 때 사용 -->
	<select id="selectByOptionCnt"  parameterType="DanggeunSearchItem" resultType="int">
		SELECT COUNT(*)
		FROM danggeun
		WHERE true
		<include refid="searchLocationCondition" />
		<include refid="searchKeywordCondition" />
		<include refid="searchTypeCondition" />
	</select>

	<!-- 옵션을 이용해 상품 리스트를 불러올 때 사용 -->
	<select id="selectByOption" parameterType="DanggeunSearchItem" resultType="DanggeunDto">
		SELECT id, title, type_id, type_name, sido_code, sido_name, sigoon_code, sigoon_name, dong_code, dong_name, price, content, writer_email, writer_name, view_cnt, zzim_cnt, reg_date, up_date, CASE WHEN member_email IS NULL THEN false ELSE true END AS is_zzimed
		FROM danggeun LEFT JOIN zzim_danggeun ON id = danggeun_id AND member_email = #{login_email}
		WHERE true
		<include refid="searchLocationCondition" />
		<include refid="searchKeywordCondition" />
		<include refid="searchTypeCondition" />
		ORDER BY reg_date desc, id desc
		LIMIT #{pageSize} OFFSET #{offset}
	</select>
	
	<sql id="searchLocationCondition">
		<choose>
			<when test='dong_code!="0"'>
				AND dong_code = #{dong_code}
			</when>
			<when test='sigoon_code!="0"'>
				AND sigoon_code = #{sigoon_code}
			</when>
			<when test='sido_code!="0"'>
				AND sido_code = #{sido_code}
			</when>
		</choose>
	</sql>
	
	<sql id="searchKeywordCondition">
		<choose>
			<when test='option=="T"'>
				AND title LIKE concat('%', #{keyword}, '%')			
			</when>
			<when test='option=="W"'>
				AND writer_name LIKE concat('%', #{keyword}, '%')
			</when>
			<otherwise>
				AND (title LIKE concat('%', #{keyword}, '%') OR content LIKE concat('%', #{keyword}, '%'))
			</otherwise>
		</choose>
	</sql>

	<sql id="searchTypeCondition">
		<choose>
			<when test='type_id!=0'>
				AND type_id = #{type_id}
			</when>
		</choose>
	</sql>
	
	<!-- 게시물 하나 읽을 때 사용 -->
	<select id="select" parameterType="map" resultType="DanggeunDto">
		SELECT id, title, type_id, type_name, sido_code, sido_name, sigoon_code, sigoon_name, dong_code, dong_name, price, content, writer_email, writer_name, view_cnt, zzim_cnt, reg_date, up_date, CASE WHEN member_email IS NULL THEN false ELSE true END AS is_zzimed
		FROM danggeun LEFT JOIN zzim_danggeun ON id = danggeun_id AND member_email = #{login_email}
		WHERE id = #{id}
	</select>
	
	<!-- 게시물 수정할 때 사용 -->
	<update id="update" parameterType="DanggeunDto">
		UPDATE danggeun
		SET title = #{title}, type_id = #{type_id}, type_name = #{type_name}, sido_code = #{sido_code}, sido_name = #{sido_name}, sigoon_code = #{sigoon_code}, sigoon_name = #{sigoon_name}, dong_code = #{dong_code}, dong_name = #{dong_name}, price = #{price}, content = #{content}, up_date = now()
		WHERE id = #{id}
	</update>
	
	<!-- 조회수 하나 올릴 때 사용 -->
	<update id="increaseViewCnt" parameterType="int">
		UPDATE danggeun
		SET	view_cnt = view_cnt + 1
		WHERE id = #{id}	
	</update>
	
	<!-- 게시물 찜하거나 찜 취소할 때 사용 -->
	<update id="updateZzimCnt" parameterType="map">
		UPDATE danggeun
		SET	zzim_cnt = zzim_cnt + #{cnt}
		WHERE id = #{id}
	</update>
	
	<!-- 게시물 추가할 때 사용 -->
	<insert id="insert" parameterType="DanggeunDto">
		INSERT INTO danggeun (title, type_id, type_name, sido_code, sido_name, sigoon_code, sigoon_name, dong_code, dong_name, price, content, writer_email, writer_name)
		VALUES(#{title}, #{type_id}, #{type_name}, #{sido_code}, #{sido_name}, #{sigoon_code}, #{sigoon_name}, #{dong_code}, #{dong_name}, #{price}, #{content}, #{writer_email}, #{writer_name});
	</insert>
	
	<!-- 게시물 삭제할 때 사용 -->
	<!-- 찜 테이블 데이터도 삭제해야 됨 -->
	<delete id="delete" parameterType="int">
		DELETE FROM danggeun
		WHERE id = #{id}
	</delete>
	
</mapper>








